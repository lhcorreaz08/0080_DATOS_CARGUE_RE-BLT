[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\LuisHernandoCorreaZa\AppData\Local\Temp\idea8.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\LuisHernandoCorreaZa\AppData\Local\Temp\idea8.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 234.214ms
[debug]       Load.loadUnit: defsScala took 0.9441ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.7957 ms
[debug]           Load.resolveProject(global-plugins) took 122.9543ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, plugins: List(<none>))) took 236.2278ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 279.6821ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6783ms
[debug]     Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/.sbt/1.0/plugins/, ...) took 535.2057ms
[debug]   Load.apply: load took 875.1335ms
[debug]   Load.apply: resolveProjects took 14.8394ms
[debug]   Load.apply: finalTransforms took 149.9946ms
[debug]   Load.apply: config.delegates took 20.2908ms
[debug]   Load.apply: Def.make(settings)... took 1946.6804ms
[debug]   Load.apply: structureIndex took 267.0122ms
[debug]   Load.apply: mkStreams took 4.3351ms
[info] loading global plugins from C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7984.1969ms
[debug]           Load.loadUnit: plugins took 57.8181ms
[debug]           Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project
[debug]             Load.loadUnit: mkEval took 18.6622ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.2286 ms
[info] loading settings for project cdrprocessor-build from assembly.sbt,idea8.sbt ...
[debug]               Load.resolveProject(cdrprocessor-build) took 15.6324ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cdrprocessor-build, base: C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, plugins: List(<none>))) took 21.1057ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, returning: (cdrprocessor-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5981.3875ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.9971ms
[debug]         Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/project/, ...) took 6057.1618ms
[debug]       Load.apply: load took 6060.2238ms
[debug]       Load.apply: resolveProjects took 0.2281ms
[debug]       Load.apply: finalTransforms took 25.6165ms
[debug]       Load.apply: config.delegates took 0.8582ms
[debug]       Load.apply: Def.make(settings)... took 159.3759ms
[debug]       Load.apply: structureIndex took 65.4228ms
[debug]       Load.apply: mkStreams took 0.0044ms
[info] loading project definition from C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9862.9659ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor
[debug]       Load.loadUnit: mkEval took 1.199ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.9076 ms
[info] loading settings for project cdrprocessor from build.sbt ...
[debug]         Load.resolveProject(cdrprocessor) took 74.7287ms
[debug]       Load.loadTransitive: finalizeProject(Project(id cdrprocessor, base: C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, plugins: List(<none>))) took 83.6181ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, returning: (cdrprocessor)
[debug]     Load.loadUnit: loadedProjectsRaw took 4873.99ms
[debug]     Load.loadUnit: cleanEvalClasses took 39.5355ms
[debug]   Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/, ...) took 14777.6448ms
[debug] Load.apply: load took 14781.0088ms
[debug] Load.apply: resolveProjects took 0.334ms
[debug] Load.apply: finalTransforms took 56.1563ms
[debug] Load.apply: config.delegates took 0.7193ms
[debug] Load.apply: Def.make(settings)... took 162.4249ms
[debug] Load.apply: structureIndex took 63.3445ms
[debug] Load.apply: mkStreams took 0.005ms
[info] set current project to clarocdr (in build file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 65104 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 65104, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to clarocdr (in build file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/)
[debug] > Exec(idea-shell, None, None)

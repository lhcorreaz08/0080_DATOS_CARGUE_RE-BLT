[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\LuisHernandoCorreaZa\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\LuisHernandoCorreaZa\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 168.3748ms
[debug]       Load.loadUnit: defsScala took 0.6892ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.232899 ms
[debug]           Load.resolveProject(global-plugins) took 83.6719ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, plugins: List(<none>))) took 169.2976ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 213.3476ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.654201ms
[debug]     Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/.sbt/1.0/plugins/, ...) took 400.3789ms
[debug]   Load.apply: load took 654.8571ms
[debug]   Load.apply: resolveProjects took 12.554ms
[debug]   Load.apply: finalTransforms took 103.172699ms
[debug]   Load.apply: config.delegates took 18.0651ms
[debug]   Load.apply: Def.make(settings)... took 1345.629101ms
[debug]   Load.apply: structureIndex took 369.1745ms
[debug]   Load.apply: mkStreams took 15.9069ms
[info] loading global plugins from C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12380.765799ms
[debug]           Load.loadUnit: plugins took 88.8292ms
[debug]           Load.loadUnit: defsScala took 0.008501ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project
[debug]             Load.loadUnit: mkEval took 23.984ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4219 ms
[info] loading settings for project cdrprocessor-build from assembly.sbt,idea2.sbt ...
[debug]               Load.resolveProject(cdrprocessor-build) took 9.1374ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cdrprocessor-build, base: C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, plugins: List(<none>))) took 12.2789ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, returning: (cdrprocessor-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5395.3613ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.4863ms
[debug]         Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/project/, ...) took 5496.5346ms
[debug]       Load.apply: load took 5498.8091ms
[debug]       Load.apply: resolveProjects took 0.1766ms
[debug]       Load.apply: finalTransforms took 14.503799ms
[debug]       Load.apply: config.delegates took 0.5329ms
[debug]       Load.apply: Def.make(settings)... took 221.480801ms
[debug]       Load.apply: structureIndex took 125.108ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7122.935201ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor
[debug]       Load.loadUnit: mkEval took 0.2972ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.009599 ms
[info] loading settings for project cdrprocessor from build.sbt ...
[debug]         Load.resolveProject(cdrprocessor) took 33.715001ms
[debug]       Load.loadTransitive: finalizeProject(Project(id cdrprocessor, base: C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, plugins: List(<none>))) took 37.0621ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, returning: (cdrprocessor)
[debug]     Load.loadUnit: loadedProjectsRaw took 2371.6426ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.6355ms
[debug]   Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/, ...) took 9512.376ms
[debug] Load.apply: load took 9514.4469ms
[debug] Load.apply: resolveProjects took 0.0994ms
[debug] Load.apply: finalTransforms took 28.6884ms
[debug] Load.apply: config.delegates took 0.398301ms
[debug] Load.apply: Def.make(settings)... took 80.6797ms
[debug] Load.apply: structureIndex took 33.0216ms
[debug] Load.apply: mkStreams took 0.003099ms
[info] set current project to clarocdr (in build file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64172 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64172, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to clarocdr (in build file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/)
[debug] > Exec(idea-shell, None, None)

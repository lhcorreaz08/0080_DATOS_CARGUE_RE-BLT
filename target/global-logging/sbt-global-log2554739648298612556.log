[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\LuisHernandoCorreaZa\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\LuisHernandoCorreaZa\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 204.5582ms
[debug]       Load.loadUnit: defsScala took 0.6221ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.2333 ms
[debug]           Load.resolveProject(global-plugins) took 106.5248ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, plugins: List(<none>))) took 227.2189ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 278.4687ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6964ms
[debug]     Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/.sbt/1.0/plugins/, ...) took 502.4819ms
[debug]   Load.apply: load took 804.1307ms
[debug]   Load.apply: resolveProjects took 12.8846ms
[debug]   Load.apply: finalTransforms took 133.7675ms
[debug]   Load.apply: config.delegates took 21.0682ms
[debug]   Load.apply: Def.make(settings)... took 1684.2216ms
[debug]   Load.apply: structureIndex took 254.3465ms
[debug]   Load.apply: mkStreams took 4.2636ms
[info] loading global plugins from C:\Users\LuisHernandoCorreaZa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11394.2038ms
[debug]           Load.loadUnit: plugins took 68.0154ms
[debug]           Load.loadUnit: defsScala took 0.0096ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project
[debug]             Load.loadUnit: mkEval took 19.9756ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.9185 ms
[info] loading settings for project cdrprocessor-build from assembly.sbt,idea2.sbt ...
[debug]               Load.resolveProject(cdrprocessor-build) took 12.9225ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cdrprocessor-build, base: C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, plugins: List(<none>))) took 18.2017ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project, returning: (cdrprocessor-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6171.7964ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.6855ms
[debug]         Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/project/, ...) took 6261.2324ms
[debug]       Load.apply: load took 6264.7149ms
[debug]       Load.apply: resolveProjects took 0.2605ms
[debug]       Load.apply: finalTransforms took 29.8469ms
[debug]       Load.apply: config.delegates took 0.772ms
[debug]       Load.apply: Def.make(settings)... took 155.894ms
[debug]       Load.apply: structureIndex took 60.7735ms
[debug]       Load.apply: mkStreams took 0.0047ms
[info] loading project definition from C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8738.0916ms
[debug]     Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor
[debug]       Load.loadUnit: mkEval took 0.6553ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.4979 ms
[info] loading settings for project cdrprocessor from build.sbt ...
[debug]         Load.resolveProject(cdrprocessor) took 79.3363ms
[debug]       Load.loadTransitive: finalizeProject(Project(id cdrprocessor, base: C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, plugins: List(<none>))) took 88.7098ms
[debug] [Loading] Done in C:\Users\LuisHernandoCorreaZa\IdeaProjects\cdrprocessor-20220120T210553Z-001\cdrprocessor, returning: (cdrprocessor)
[debug]     Load.loadUnit: loadedProjectsRaw took 4251.3527ms
[debug]     Load.loadUnit: cleanEvalClasses took 32.2776ms
[debug]   Load.loadUnit(file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/, ...) took 13023.4335ms
[debug] Load.apply: load took 13026.1533ms
[debug] Load.apply: resolveProjects took 0.2523ms
[debug] Load.apply: finalTransforms took 55.4957ms
[debug] Load.apply: config.delegates took 0.6834ms
[debug] Load.apply: Def.make(settings)... took 170.0934ms
[debug] Load.apply: structureIndex took 53.4533ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to clarocdr (in build file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52957 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52957, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to clarocdr (in build file:/C:/Users/LuisHernandoCorreaZa/IdeaProjects/cdrprocessor-20220120T210553Z-001/cdrprocessor/)
[debug] > Exec(idea-shell, None, None)
